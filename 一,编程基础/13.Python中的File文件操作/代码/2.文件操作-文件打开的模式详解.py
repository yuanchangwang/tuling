# 。基础操作的方法


'''
1。打开文件 open()
    参数1：文件路径
        路径 url  统一资源定位符
        相对路径： 就像给别人指路一样： 在某某大厦的对面。。。
            针对文件的相对路径的表示，从当前目录开始计算
                1.txt ==>  具体文件前没有任何表示时，默认为当前目录 和 ./1.txt 是一个位置
                ./1.txt  ==> ./ 代表当前目录中的 1.txt
                ../1.txt ==> ../ 代表当前目录中的 上一级目录中的1.txt
        绝对路径： 就像买东西写收货地址一样： 北京市海淀区中关村大街128号xxx小区，xxx号楼xx单元xx室
            windows：  c:/users/appdata/1.txt
            Linux： /user/home/yc/1.txt

    参数2：打开的方式
        基础模式:  w  r  x  a
            w w模式  write 写入模式
                1。 文件如果不存在，则创建这个文件
                2。 文件如果存在，则打开这个文件，并且清空文件内容
                3。 文件打开后，文件的指针在文件的最前面

            r r模式： read  读取模式
                1。 如果文件不存在，则报错
                2。 文件如果存在，则打开文件
                3。 文件指针在文件的最前面

            x x模式： xor 异或模式
                1。文件不存在，则创建这个文件
                2。文件已存在，则报错（防止覆盖）
                3。文件的指针在文件的最前面

            a a模式： append 追加模式
                1。文件不存在，则创建文件
                2。文件如果存在，则打开文件 （和w模式的区别在于。a模式打开文件后不会清空）
                3。文件指针在当前文件的最后

        扩展模式：
            b b模式  bytes   二进制
            + +模式  plus    增强模式（可读可写）

        文件操作模式的组合：
            w,r,a,x
            wb,rb,ab,xb,
            w+,r+,a+,x+
            wb+,rb+,ab+,xb+

    参数 encoding 可选参数，设置文件的字符集，
        如果是一个二进制的文件时，不需要设置字符集
        encoding='utf-8'

'''
# 1。打开文件
# 打开文件，创建了一个文件对象
fp = open('./1.txt','x',encoding='utf-8')

# 如果使用r模式打开一个不存在的文件，则会引发错误
#FileNotFoundError: [Errno 2] No such file or directory: './2.txt'

# 如果使用x模型打开一个已经存在的文件，则会报错
# FileExistsError: [Errno 17] File exists: './1.txt'


# 2。 读取文件内容
# 使用文件对象 调用 read() 方法
res = fp.read()
print(res)


# 3。关闭文件
# 使用文件对象，调用close(） 方法 关闭文件
fp.close()

